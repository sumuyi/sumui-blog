server:
  port: 9090
  servlet:
    # 应用的访问路径
    context-path: /
  compression:
    enabled: true # 开启返回结果压缩，减少传输耗时
    min-response-size: 2KB

# 日志配置
logging:
  level:
    com.sumui: debug
    org.springframework: warn
    org.springframework.boot: info  # 添加这一行，确保Spring Boot的启动信息能够显示
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"


# 项目配置
sumui:
  name: Sumui-Blog
  description: 一个基于Spring Boot和Vue的博客系统
  version: 0.0.1
  # 版权年份
  copyrightYear: 2023
  # 实例演示开关
  demoEnabled: true
  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）
  profile: D:/sumuiBlog/uploadPath
  # 获取ip地址开关
  addressEnabled: false
  # 验证码类型 math 数字计算 char 字符验证
  captchaType: math

# 用户配置
user:
  password:
    # 密码最大错误次数
    maxRetryCount: 5
    # 密码锁定时间（默认10分钟）
    lockTime: 10

spring:
  profiles:
    # 将 @profiles.active@ 改为以下格式之一
    active: ${SPRING_PROFILES_ACTIVE:dev}
  application:
    name: sumui-blog
  main:
    banner-mode: console
    log-startup-info: true  # 添加这一行，确保启动信息被记录
  banner:
    charset: UTF-8
    location: classpath:banner.txt

  # redis配置
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: 121.37.202.66
    # Redis服务器连接端口
    port: 16379
    # Redis服务器连接密码（默认为空）
    password: redis_0720
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
redisson:
  # redis key前缀
  keyPrefix:
  # 线程池数量
  threads: 4
  # Netty线程池数量
  nettyThreads: 8
  # 单节点配置
  singleServerConfig:
    # 客户端名称
    clientName: ${sumui.name}
    # 最小空闲连接数
    connectionMinimumIdleSize: 8
    # 连接池大小
    connectionPoolSize: 32
    # 连接空闲超时，单位：毫秒
    idleConnectionTimeout: 10000
    # 命令等待超时，单位：毫秒
    timeout: 3000
    # 发布和订阅连接池大小
    subscriptionConnectionPoolSize: 50

# mybatis 相关统一配置
mybatis-plus:
  configuration:
    # 开启下划线转驼峰  将数据库表中的下划线命名方式（underscore case） 映射为Java对象中的驼峰命名方式
    map-underscore-to-camel-case: true
    # 开启日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # mapper文件
  mapper-locations: classpath*:/mapper/**/*.xml
  global-config:
    db-config:
      #逻辑删除
      logic-delete-value: 1
      logic-not-delete-value: 0
      logic-delete-field: delFlag

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: Sa-token
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # jwt秘钥
  jwt-secret-key: sunl@guan

# springdoc-openapi项目配置
springdoc:
  group-configs:
    - group: 后端管理接口
      packages-to-scan: com.sumui.web.controller.admin
    - group: 前端API接口
      packages-to-scan: com.sumui.web.controller.front

# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh-CN

# 微信小程序 配置
wechat:
  appid: wx969c9da0c63cb838
  secret: 75c264273f9f715fbbe16f8d2b725edf
  url: https://api.weixin.qq.com/sns/jscode2session?grant_type=authorization_code
  access_token_url: https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential
